package com.example.gutnutritionmanager;

import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.ProgressBar;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import androidx.lifecycle.ViewModelProvider;
import androidx.viewpager2.adapter.FragmentStateAdapter;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.tabs.TabLayout;
import com.google.android.material.tabs.TabLayoutMediator;

public class MainActivity extends AppCompatActivity {
    private ViewPager2 viewPager;
    private TabLayout tabLayout;
    public NutritionViewModel viewModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize ViewModel with factory
        NutritionViewModelFactory factory = new NutritionViewModelFactory(getApplication());
        viewModel = new ViewModelProvider(this, factory).get(NutritionViewModel.class);

        viewPager = findViewById(R.id.viewPager);
        tabLayout = findViewById(R.id.tabLayout);

        // Link the ViewPager with the TabLayout
        viewPager.setAdapter(new NutritionPagerAdapter(this));
        new TabLayoutMediator(tabLayout, viewPager,
                (tab, position) -> {
                    // Set tab titles
                    switch (position) {
                        case 0:
                            tab.setText("Diary");
                            break;
                        case 1:
                            tab.setText("Symptoms");
                            break;
                        case 2:
                            tab.setText("Insights");
                            break;
                    }
                }).attach();
        //populate food databse
        populateFoodDatabase();
    }
    // Show/hide it in your code

    public void populateFoodDatabase() {
        SharedPreferences prefs = getSharedPreferences("app_prefs", MODE_PRIVATE);
        boolean isDatabasePopulated = prefs.getBoolean("is_database_populated", false);

        if (isDatabasePopulated) {
            return; // Database already populated
        }


        String[][] commonFoods = {
                {"Apple", "Fruits", "true"},
                {"Banana", "Fruits", "true"},
                {"Orange", "Fruits", "true"},
                {"Chicken", "Proteins", "true"},
                {"Beef", "Proteins", "true"},
                {"Fish", "Proteins", "true"},
                {"Rice", "Grains", "true"},
                {"Pasta", "Grains", "true"},
                {"Bread", "Grains", "true"},
                {"Milk", "Dairy", "true"},
                {"Cheese", "Dairy", "true"},
                {"Yogurt", "Dairy", "true"},
                {"Eggs", "Proteins", "true"},
                {"Tomato", "Vegetables", "true"},
                {"Lettuce", "Vegetables", "true"},
                {"Carrot", "Vegetables", "true"},
                {"Onion", "Vegetables", "true"},
                {"Potato", "Vegetables", "true"},
                {"Broccoli", "Vegetables", "true"},
                {"Chocolate", "Sweets", "true"},
                {"Coffee", "Beverages", "true"},
                {"Tea", "Beverages", "true"}
        };

        for (String[] food : commonFoods) {
            Food newFood = new Food(
                    0, // id (will be auto-generated by Room)
                    food[0], // name
                    food[1], // category
                    Boolean.parseBoolean(food[2]), // common
                    "UNKNOWN", // fodmapStatus
                    "", // usdaId
                    0.0, // calories
                    0.0, // protein
                    0.0, // carbs
                    0.0, // fat
                    0.0, // fiber
                    0.0, // sugar
                    null // nutrientData
            );
            viewModel.insertFood(newFood);
        }
        // Mark as populated
        prefs.edit().putBoolean("is_database_populated", true).apply();

        Toast.makeText(this, "Food database populated with " +commonFoods.length + " items", Toast.LENGTH_SHORT).show();
    }

    // Adapter to manage the three tabs (fragments)
    private class NutritionPagerAdapter extends FragmentStateAdapter {
        public NutritionPagerAdapter(FragmentActivity fa) {
            super(fa);
        }

        @NonNull
        @Override
        public Fragment createFragment(int position) {
            switch (position) {
                case 0:
                    return new DiaryFragment();
                case 1:
                    return new SymptomsFragment();
                case 2:
                    return new InsightsFragment();
                default:
                    return new DiaryFragment();
            }
        }

        @Override
        public int getItemCount() {
            return 3; // Number of tabs
        }
    }


}